---
- include_vars: known-images.yaml

- fail:
    msg: "Unknown image to build: {{ image }}. Known images are: {{ known_images | join(', ') }}"
  when: image not in known_images

- set_fact:
    build_dir: "{{ playbook_dir }}/../tmp"

- name: 'Create build dir for {{ image }}'
  file:
    path: "{{ build_dir }}/{{ image }}"
    state: directory

- name: "Create Dockerfile for {{ image }}"
  template:
    src: "{{ image }}/Dockerfile.j2"
    dest: "{{ build_dir }}/{{ image }}/Dockerfile"
    mode: 0600

- name: "Copy container assets for {{ image }} to build dir"
  copy:
    src: "{{ role_path }}/files/{{ image }}/container-assets"
    dest: "{{ build_dir }}/{{ image }}"
    mode: preserve
  # todo when container-assets exist

# docker_image does not support pushing into registry with creds
# so we need to to login, push and then logout again :(
# could podman_image module do any better?
- name: Log into registry {{ registry }}
  docker_login:
    registry_url: "{{ registry }}"
    username: "{{ registry_user }}"
    password: "{{ registry_token }}"
  when: registry != ''

- name: "Build image for {{ image }}"
  docker_image:
    build:
      path: "{{ build_dir }}/{{ image }}"
      pull: yes
    name: "{{ image }}"
    tag: "{{ tag }}"
    source: build

# build and push does not seem to work as one task, so split
- name: Push {{ image }} image into registry {{ registry }}
  docker_image:
    name: "{{ image }}:{{ tag }}"
    push: "{{ registry != '' }}"
    source: local
    repository: "{{ registry }}/{{ image }}:{{ tag }}"
  when: registry != ''

- name: Log out of registry {{ registry }}
  docker_login:
    state: absent
  when: registry != ''

- name: "Clean up build dir"
  file:
    path: "{{ build_dir }}/{{ image }}"
    state: absent
  when: cleanup
